schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

input AdminAuth {
  Email: String!
  Password: String!
}

input AdminCreateEmployeeInput {
  Department: String!
  Email: String!
  FullName: String!
  Password: String!
}

input CreateAdmin {
  Email: String!
  Password: String!
}

input LogHistory {
  FullName: String
}

type Mutation {
  AdminLogin(input: AdminAuth): admin @join__field(graph: AUTHENTICATIONSERVICES)
  CreateAdmin(input: CreateAdmin): admin @join__field(graph: AUTHENTICATIONSERVICES)
  CreateEmployee(input: AdminCreateEmployeeInput): employee @join__field(graph: AUTHENTICATIONSERVICES)
  FindEmployeeHistoryLogs(input: LogHistory): employeeLogs @join__field(graph: TIMESERVICES)
  InputEmployeeTimeIn(input: TimeIn): employeeLogs @join__field(graph: TIMESERVICES)
  InputEmployeeTimeOut(input: TimeOut): employeeLogs @join__field(graph: TIMESERVICES)
  UserLogin(input: UserAuth): employee @join__field(graph: AUTHENTICATIONSERVICES)
}

type Query {
  GetAllEmployeeHistoryLogs: [employeeLogs] @join__field(graph: TIMESERVICES) 
  List: [employee] @join__field(graph: AUTHENTICATIONSERVICES)
  SetTimer: [employeeLogs] @join__field(graph: TIMESERVICES)
}

input TimeIn {
  FullName: String
}

input TimeOut {
  FullName: String
}

input UserAuth {
  Email: String!
  Password: String!
}

type admin {
  Email: String!
  Password: String!
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

type employee {
  CreatedAt: String
  Department: String
  Email: String
  FullName: String
  Password: String
  id: ID
  
}

type employeeLogs {
  FullName: String
  HistoryLog: String
  Indicators: String
  Report: String
  TimeIn: String
  TimeOut: String
  id: ID
  user: employee
}

scalar join__FieldSet

enum join__Graph {
  AUTHENTICATIONSERVICES @join__graph(name: "AuthenticationServices" url: "http://127.0.0.1:5050/")
  TIMESERVICES @join__graph(name: "TimeServices" url: "http://127.0.0.1:8000/")
}
